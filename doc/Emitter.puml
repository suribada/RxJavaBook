@startuml

interface Emitter<T> {
    {abstract} onNext(T value)
    {abstract} onError(Throwable error)
    {abstract} onComplete()
}
interface ObservableEmitter<T>
interface FlowableEmitter<T>
class CreateEmitter<T>
class ObservableCreate<T>
class FlowableCreate<T>
abstract class BaseEmitter
class GeneratorDisposable<T, S>
class ObservableGenerate<T, S>
class GeneratorSubscription<T, S>
class FlowableGenerate<T, S>

Emitter <|-- ObservableEmitter
Emitter <|-- FlowableEmitter
ObservableEmitter <|.. CreateEmitter
ObservableCreate +-- CreateEmitter
FlowableEmitter <|.. BaseEmitter
FlowableCreate +-- BaseEmitter
Emitter <|.. GeneratorDisposable
Emitter <|.. GeneratorSubscription
ObservableGenerate +-- GeneratorDisposable
FlowableGenerate +-- GeneratorSubscription


@enduml